plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    testOptions.unitTests.includeAndroidResources = true

    defaultConfig {
        applicationId "com.example.peopleinteractive"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Enables view binding.
    buildFeatures {
        dataBinding true
    }

    kapt {
        useBuildCache = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'org.mockito:mockito-core:3.3.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0-M1"

    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    // Core with Ktx
    implementation "androidx.core:core-ktx:$version_core"

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    //Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-M1"

    // Room and Lifecycle dependencies
    implementation "androidx.room:room-runtime:$room_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    //RecyclerView
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"

    //lifecycle dependencies
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"

    // Dagger
    implementation "com.google.dagger:dagger:2.28.3"
    implementation "com.google.dagger:dagger-android-support:$version_dagger"
    kapt "com.google.dagger:dagger-compiler:$version_dagger"
    kapt "com.google.dagger:dagger-android-processor:$version_dagger"

    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
}